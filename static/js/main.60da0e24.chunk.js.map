{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","useState","listData","setListData","filterYear","setFilterYear","launchStatus","setLaunchStatus","landingStatus","setLandingStatus","isLoading","setIsLoading","useEffect","url","filerByYear","filerByLaunch","filerByLanding","toLowerCase","Axios","get","headers","then","response","data","err","catch","console","log","yearBox","document","getElementsByClassName","a","style","backgroundColor","onYearChange","e","val","target","id","length","getElementById","onLaunchChange","onLandingChange","className","textAlign","margin","width","onClick","Fragment","map","item","index","missionId","mission_id","height","padding","borderRadius","src","links","mission_patch_small","mission_name","flight_number","launch_year","launch_success","rocket","first_stage","cores","land_success","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.60da0e24.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Axios from 'axios';\n\nconst App = props => {\n\n  let [listData, setListData] = useState([]);\n  let [filterYear, setFilterYear] = useState();\n  let [launchStatus, setLaunchStatus] = useState();\n  let [landingStatus, setLandingStatus] = useState();\n  let [isLoading, setIsLoading] = useState(false);\n  // let url = \"https://api.spaceXdata.com/v3/launches?limit=100&launch_success=true&land_success=true&launch_year=2014\";\n\n\n  useEffect(() => {\n    let url;\n    let filerByYear;\n    let filerByLaunch;\n    let filerByLanding;\n\n    setIsLoading(!isLoading);\n\n    if (!!filterYear) {\n      filerByYear = \"&launch_year=\" + filterYear\n    } else {\n      filerByYear = \"\"\n    }\n\n    if (!!launchStatus) {\n      let realStatus = launchStatus.toLowerCase() === 'launchtrue' ? true : false\n      filerByLaunch = \"&launch_success=\" + realStatus\n    } else {\n      filerByLaunch = \"\"\n    }\n\n    if (!!landingStatus) {\n      let realStatus = landingStatus.toLowerCase() === 'true' ? true : false\n      filerByLanding = \"&land_success=\" + realStatus\n    } else {\n      filerByLanding = \"\"\n    }\n\n    url = \"http://api.spacexdata.com/v3/launches?limit=100\" + filerByLaunch + \"\" + filerByLanding + \"\" + filerByYear\n\n    // console.log(url);\n    Axios.get(url, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then((response) => {\n        setIsLoading(false);\n        setListData(response.data);\n      })\n      .then((err) => {\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  }, [filterYear, launchStatus, landingStatus]);\n\n  useEffect(() => {\n\n    let yearBox = document.getElementsByClassName(\"btn\");\n    for (var a = 0; a < yearBox; a++) {\n      yearBox[a].style.backgroundColor = \"yellow\"\n      // console.log(yearBox);\n      // document.getElementById(val).style.backgroundColor=\"yellow\"\n    }\n  }, []);\n\n  const onYearChange = (e) => {\n    let val = e.target.id;\n    console.log(e.target.id);\n    setFilterYear(val);\n\n    let yearBox = document.getElementsByClassName(\"btn\");\n    for(var a=0; a<yearBox.length; a++){\n      yearBox[a].style.backgroundColor=\"#adf5ad\";\n      // console.log(yearBox);\n       document.getElementById(val).style.backgroundColor=\"#a2a20c\"\n    }\n\n\n  }\n\n  const onLaunchChange = (e) => {\n    let val = e.target.id;\n    setLaunchStatus(val);\n    let yearBox = document.getElementsByClassName(\"launchbtn\");\n    for(var a=0; a<yearBox.length; a++){\n      yearBox[a].style.backgroundColor=\"#adf5ad\";\n      // console.log(yearBox);\n       document.getElementById(val).style.backgroundColor=\"#a2a20c\"\n    }\n  }\n\n  const onLandingChange = (e) => {\n    let val = e.target.id;\n    setLandingStatus(val);\n    let yearBox = document.getElementsByClassName(\"landbtn\");\n    for(var a=0; a<yearBox.length; a++){\n      yearBox[a].style.backgroundColor=\"#adf5ad\";\n      // console.log(yearBox);\n       document.getElementById(val).style.backgroundColor=\"#a2a20c\"\n    }\n  }\n\n\n  return (\n    <div>\n      <h1>SpaceX Launch Programs </h1>\n      <div className=\"container\">\n        {/* Filter Start*/}\n        <div className=\"filter_container\">\n          <b>Filters</b>\n          <p style={{ textAlign: \"center\", margin: \"0px\" }}>Launch Year</p>\n          <hr style={{ width: \"60%\" }} />\n          <div className=\"txt_center\">\n            <button id=\"2006\" className=\"btn\" onClick={onYearChange}>2006</button>\n            <button id=\"2007\" className=\"btn\" onClick={onYearChange}>2007</button>\n            <button id=\"2008\" className=\"btn\" onClick={onYearChange}>2008</button>\n            <button id=\"2009\" className=\"btn\" onClick={onYearChange}>2009</button>\n            <button id=\"2010\" className=\"btn\" onClick={onYearChange}>2010</button>\n            <button id=\"2011\" className=\"btn\" onClick={onYearChange}>2011</button>\n            <button id=\"2012\" className=\"btn\" onClick={onYearChange}>2012</button>\n            <button id=\"2013\" className=\"btn\" onClick={onYearChange}>2013</button>\n            <button id=\"2014\" className=\"btn\" onClick={onYearChange}>2014</button>\n            <button id=\"2015\" className=\"btn\" onClick={onYearChange}>2015</button>\n            <button id=\"2016\" className=\"btn\" onClick={onYearChange}>2016</button>\n            <button id=\"2017\" className=\"btn\" onClick={onYearChange}>2017</button>\n            <button id=\"2018\" className=\"btn\" onClick={onYearChange}>2018</button>\n            <button id=\"2019\" className=\"btn\" onClick={onYearChange}>2019</button>\n            <button id=\"2020\" className=\"btn\" onClick={onYearChange}>2020</button>\n{/* \n            <div>\n              <div class=\"filter_Btn_Coniner\">\n                    <input type=\"radio\" name=\"radio\" />\n                <div class=\"checkmark\">2000</div>\n              </div>\n            </div> */}\n          </div>\n\n          <div>\n            <p style={{ textAlign: \"center\", margin: \"0px\" }}>Successfull Launch</p>\n            <hr style={{ width: \"60%\" }} />\n            <div className=\"txt_center\">\n              <button id=\"launchtrue\" className=\"launchbtn\" onClick={onLaunchChange}>True</button>\n              <button id=\"launchfalse\" className=\"launchbtn\" onClick={onLaunchChange}>False</button>\n            </div>\n          </div>\n\n          <div>\n            <p style={{ textAlign: \"center\", margin: \"0px\" }}>Successfull Landing</p>\n            <hr style={{ width: \"60%\" }} />\n            <div className=\"txt_center\">\n              <button id=\"true\" className=\"landbtn\" onClick={onLandingChange}>True</button>\n              <button id=\"false\" className=\"landbtn\" onClick={onLandingChange}>False</button>\n            </div>\n          </div>\n\n        </div>\n        {/* Filter End */}\n        {/* List Start */}\n        <div className=\"list_container\">\n          {isLoading ? <div>Loading......</div> :\n            <React.Fragment>\n              {listData.length > 0 ?\n                listData.map((item, index) => {\n                  let missionId = \"Not mentioned\";\n                  if (item.mission_id.length > 0) {\n                    missionId = item.mission_id;\n                  }\n                  return <div style={{ height: \"500px\", padding: \"20px\", backgroundColor: \"white\", borderRadius: \"5px\" }}>\n                    <div style={{ height: \"200px\" }}><img src={item.links.mission_patch_small} height=\"100%\" width=\"100%\" /></div>\n                    <div className=\"fnn\"><b>{item.mission_name}#{item.flight_number}</b></div>\n                    <div>\n                      <b>Mission Ids</b>\n                      <ul>\n                        <li>{missionId}</li>\n                      </ul>\n                    </div>\n                    <div><span><b>Launch Year: </b> {item.launch_year}</span></div>\n                    <div><span><b>Successfull Launch:</b></span> {item.launch_success ? <span>true</span> : <span>false</span>}</div>\n                    <div><span><b>Successfull Landing:</b></span> {item.rocket.first_stage.cores[0].land_success ? <span>true</span> : <span>false</span>}</div>\n                  </div>\n\n\n                })\n                : <div>No data found</div>}\n            </React.Fragment>\n          }\n\n        </div>\n        {/* List End */}\n          \n      </div>\n      <div className=\"txt_center\"><b>Developed By</b>: Joginder Singh</div>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}